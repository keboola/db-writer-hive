version: '3'
services:
  tests: &tests
    build: .
    image: keboola-component-db-writer-hive
    command: composer ci
    environment:
      # Db credentials
      HIVE_DB_HOST: ${HIVE_DB_HOST}
      HIVE_DB_PORT: ${HIVE_DB_PORT}
      HIVE_DB_DATABASE: ${HIVE_DB_DATABASE}
      HIVE_DB_USER: ${HIVE_DB_USER}
      HIVE_DB_PASSWORD: ${HIVE_DB_PASSWORD} # defined in docker/ldap/init/01-hive-user.ldif
      HIVE_VERSION: ${HIVE_VERSION}
      # SSH container credentials
      SSH_DB_HOST: hive-server-behind-ssh
      SSH_HOST: ssh-tunnel
      SSH_PORT: 22
      SSH_USER: root
    links:
      - hive-server
      - ssh-tunnel
    volumes:
      - ssh-keys:/root/.ssh:ro

  dev:
    <<: *tests
    command: bash
    volumes:
      - ./:/code
      - ssh-keys:/root/.ssh:ro

  wait:
    image: waisbrot/wait
    depends_on:
      - hive-server
      - ssh-tunnel
    environment:
      - TARGETS=hive-server:10000,ssh-tunnel:22
      - TIMEOUT=200

  # SSH tunnel
  ssh-tunnel:
    image: keboola/db-component-ssh-proxy:latest
    volumes:
      - ssh-keys:/root/.ssh
    links:
      - hive-server:hive-server-behind-ssh

  # LDAP authentication server for Hive (external auth must be provided)
  # Test cmd: docker-compose exec ldap ldapsearch -x -H ldap://localhost -b dc=keboola-test,dc=com -D "uid=admin,dc=keboola-test,dc=com" -w 'admin'
  # Modify command: docker-compose exec ldap ldapmodify -H ldap://localhost -D "uid=admin,dc=keboola-test,dc=com" -w 'admin'
  ldap:
    image: osixia/openldap:1.3.0-amd64
    command: --copy-service
    environment:
      LDAP_TLS: 'false'
      LDAP_ORGANISATION: Keboola Test
      LDAP_DOMAIN: keboola-test.com
      LDAP_ADMIN_PASSWORD: admin
    volumes:
      # LDAP initialization files
      - ./docker/ldap/init:/container/service/slapd/assets/config/bootstrap/ldif/custom:ro

  # Hive infrastructure
  # From: https://github.com/big-data-europe/docker-hive/blob/master/docker-compose.yml
  # Test cmd: docker-compose exec hive-server beeline -u jdbc:hive2://localhost:10000 -n hive -p 'p#a!s@sw:o&r%^d' -e "SHOW TABLES;"
  hive-server:
    image: hive-server
    build:
      context: ${HIVE_SERVER_IMAGE_DIR}
      args:
        HIVE_VERSION: ${HIVE_VERSION}
    env_file:
      - ${HIVE_SERVER_IMAGE_DIR}/hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "hive-metastore:9083"
      HIVE_DB_PORT: ${HIVE_DB_PORT}
      HIVE_DB_DATABASE: ${HIVE_DB_DATABASE}
      HIVE_DB_USER: ${HIVE_DB_USER}
      HIVE_DB_PASSWORD: ${HIVE_DB_PASSWORD} # defined in docker/ldap/init/01-hive-user.ldif
    links:
      - ldap
      - hive-metastore
      - hive-metastore-postgresql
      - namenode
      - datanode
      - resourcemanager
      - nodemanager
      - historyserver
  hive-metastore:
    image: hive-server
    build:
      context: ${HIVE_SERVER_IMAGE_DIR}
      args:
        HIVE_VERSION: ${HIVE_VERSION}
    env_file:
      - ${HIVE_SERVER_IMAGE_DIR}/hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "hive-metastore-postgresql:5432 namenode:${HADOOP_NAMENODE_WAIT_PORT} datanode:${HADOOP_DATANODE_WAIT_PORT}"
  hive-metastore-postgresql:
    image: postgres:9.5.3
    environment:
      POSTGRES_DB: metastore
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive

  # Hadoop infrastructure
  # https://github.com/big-data-europe/docker-hadoop
  namenode:
    image: bde2020/hadoop-${HADOOP_NAMENODE_TAG}
    env_file:
      - ${HIVE_SERVER_IMAGE_DIR}/hadoop-hive.env
    ports:
      - "9999:9999" # Web UI for debugging
  datanode:
    image: bde2020/hadoop-${HADOOP_DATANODE_TAG}
    environment:
      SERVICE_PRECONDITION: "namenode:${HADOOP_NAMENODE_WAIT_PORT}"
    env_file:
      - ${HIVE_SERVER_IMAGE_DIR}/hadoop-hive.env
  resourcemanager:
    image: bde2020/hadoop-${HADOOP_RESOURCEMANAGER_TAG}
    environment:
      SERVICE_PRECONDITION: "namenode:${HADOOP_NAMENODE_WAIT_PORT} datanode:${HADOOP_DATANODE_WAIT_PORT}"
    env_file:
      - ${HIVE_SERVER_IMAGE_DIR}/hadoop-hive.env
    ports:
      - "8088:8088" # Web UI for debugging
  nodemanager:
    image: bde2020/hadoop-${HADOOP_NODEMANAGER_TAG}
    environment:
      SERVICE_PRECONDITION: "namenode:${HADOOP_NAMENODE_WAIT_PORT} datanode:${HADOOP_DATANODE_WAIT_PORT} resourcemanager:${HADOOP_RESOURCEMANAGER_WAIT_PORT}"
    env_file:
      - ${HIVE_SERVER_IMAGE_DIR}/hadoop-hive.env
    ports:
      - "8042:8042" # Web UI for debugging
  historyserver:
    image: bde2020/hadoop-${HADOOP_HISTORYSERVER_TAG}
    environment:
      SERVICE_PRECONDITION: "namenode:${HADOOP_NAMENODE_WAIT_PORT} datanode:${HADOOP_DATANODE_WAIT_PORT} resourcemanager:${HADOOP_RESOURCEMANAGER_WAIT_PORT}"
    env_file:
      - ${HIVE_SERVER_IMAGE_DIR}/hadoop-hive.env
    ports:
      - "8188:8188" # Web UI for debugging

volumes:
  ssh-keys:
