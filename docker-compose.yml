version: '3'
services:
  tests: &tests
    build: .
    image: keboola-component-db-writer-hive
    command: bash
    environment:
      # Db credentials
      HIVE_DB_HOST: hive-server
      HIVE_DB_PORT: 10000
      HIVE_DB_DATABASE: default
      HIVE_DB_USER: admin
      HIVE_DB_PASSWORD: p#a!s@sw:o&r%^d
      # SSH container credentials
      SSH_DB_HOST: hive-server-behind-ssh
      SSH_HOST: ssh-tunnel
      SSH_PORT: 22
      SSH_USER: root
    links:
      - hive-server
      - ssh-tunnel
    volumes:
      - ssh-keys:/root/.ssh:ro

  dev:
    <<: *tests
    volumes:
      - ./:/code
      - ssh-keys:/root/.ssh:ro

  wait:
    image: waisbrot/wait
    depends_on:
      - hive-server
      - ssh-tunnel
    environment:
      - TARGETS=hive-server:10000,ssh-tunnel:22
      - TIMEOUT=120

  # SSH tunnel
  ssh-tunnel:
    image: keboola/db-component-ssh-proxy:latest
    volumes:
      - ssh-keys:/root/.ssh
    links:
      - hive-server:hive-server-behind-ssh

  # LDAP authentication server for Hive (external auth must be provided)
  # Test cmd: docker-compose exec ldap ldapsearch -x -H ldap://localhost -b dc=keboola-test,dc=com -D "cn=admin,dc=keboola-test,dc=com" -w 'p#a!s@sw:o&r%^d'
  ldap:
    image: osixia/openldap:1.3.0-amd64
    command: --copy-service
    environment:
      LDAP_TLS: 'false'
      LDAP_ORGANISATION: Keboola Test
      LDAP_DOMAIN: keboola-test.com
      LDAP_ADMIN_PASSWORD: p#a!s@sw:o&r%^d

  # Hive infrastructure
  # From: https://github.com/big-data-europe/docker-hive/blob/master/docker-compose.yml
  # Test cmd: docker-compose exec hive-server beeline -u jdbc:hive2://localhost:10000 -n admin -p 'p#a!s@sw:o&r%^d' -e "SHOW TABLES;"
  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - docker/hive-env/hadoop-hive.env
    environment:
      # Credentials for docker/hive-server/custom-init.sh (same as in ldap server)
      HIVE_DB_USER: admin
      HIVE_DB_PASSWORD: p#a!s@sw:o&r%^d
      HIVE_DB_PORT: 10000
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
      HIVE_SITE_CONF_hive_server2_use_SSL: 'false'
      HIVE_SITE_CONF_hive_server2_authentication: LDAP
      HIVE_SITE_CONF_hive_server2_authentication_ldap_url: ldap://ldap:389
      HIVE_SITE_CONF_hive_server2_authentication_ldap_baseDN: dc=keboola-test,dc=com
      HIVE_SITE_CONF_hive_server2_authentication_ldap_userDNPattern: cn=%s,dc=keboola-test,dc=com
    links:
      - ldap
      - namenode
      - datanode
      - presto-coordinator
      - hive-metastore
      - hive-metastore-postgresql
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    environment:
      - CLUSTER_NAME=test
    env_file:
      - docker/hive-env/hadoop-hive.env
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    env_file:
      - docker/hive-env/hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - docker/hive-env/hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 hive-metastore-postgresql:5432"
  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
  presto-coordinator:
    image: shawnzhu/prestodb:0.181

volumes:
  ssh-keys:
